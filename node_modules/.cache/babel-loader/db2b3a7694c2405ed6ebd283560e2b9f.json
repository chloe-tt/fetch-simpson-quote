{"ast":null,"code":"var _jsxFileName = \"/Users/chloe/fetch-simpson/src/App.js\";\nimport React from 'react';\nimport DisplaySimpson from './conponents/DisplaySimpson';\nimport axios from 'axios';\nconst SampleSimpson = [{\n  \"quote\": \"By chilling my loins I increase the chances of impregnating my wife.\",\n  \"character\": \"Apu Nahasapeemapetilon\",\n  \"image\": \"https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72%2FApuNahasapeemapetilon.png?1497567511629\",\n  \"characterDirection\": \"Left\"\n}];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      simpson: SampleSimpson\n    };\n    this.getSimpson = this.getSimpson.bind(this);\n  }\n\n  getSimpson() {\n    // Send the request\n    axios.get('https://simpsons-quotes-api.herokuapp.com/quotes') // Extract the DATA from the received response\n    .then(response => response.data[0]) // Use this data to update the state\n    .then(quote => {\n      this.setState({\n        simpson: data.results\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DisplaySimpson, {\n      simpson: SampleSimpson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.getSimpson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Get simpson\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chloe/fetch-simpson/src/App.js"],"names":["React","DisplaySimpson","axios","SampleSimpson","App","Component","constructor","props","state","simpson","getSimpson","bind","get","then","response","data","quote","setState","results","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,aAAa,GAAG,CACpB;AACA,WAAS,sEADT;AAEA,eAAa,wBAFb;AAGA,WAAS,uGAHT;AAIA,wBAAsB;AAJtB,CADoB,CAAtB;;AAUA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAEN;AADE,KAAb;AAGA,SAAKO,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAKDD,EAAAA,UAAU,GAAG;AACX;AACAR,IAAAA,KAAK,CAACU,GAAN,CAAU,kDAAV,EACE;AADF,KAEGC,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAc,CAAd,CAFpB,EAGE;AAHF,KAIGF,IAJH,CAIQG,KAAK,IAAI;AACb,WAAKC,QAAL,CAAc;AACZR,QAAAA,OAAO,EAAEM,IAAI,CAACG;AADF,OAAd;AAGH,KARD;AASD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAEhB,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKO,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADF;AAMD;;AAhC+B;;AAmClC,eAAeN,GAAf","sourcesContent":["import React from 'react';\nimport DisplaySimpson from './conponents/DisplaySimpson'\nimport axios from 'axios'\n\n\nconst SampleSimpson = [\n  {\n  \"quote\": \"By chilling my loins I increase the chances of impregnating my wife.\",\n  \"character\": \"Apu Nahasapeemapetilon\",\n  \"image\": \"https://cdn.glitch.com/3c3ffadc-3406-4440-bb95-d40ec8fcde72%2FApuNahasapeemapetilon.png?1497567511629\",\n  \"characterDirection\": \"Left\"\n  }\n]\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      simpson: SampleSimpson\n    };\n    this.getSimpson = this.getSimpson.bind(this);\n  }\n\n\n  \n\n  getSimpson() {\n    // Send the request\n    axios.get('https://simpsons-quotes-api.herokuapp.com/quotes')\n      // Extract the DATA from the received response\n      .then(response => response.data[0])\n      // Use this data to update the state\n      .then(quote => {\n        this.setState({\n          simpson: data.results,\n        });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <DisplaySimpson simpson={SampleSimpson} />\n        <button type=\"button\" onClick={this.getSimpson}>Get simpson</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}